import { GraphQLSchema, GraphQLCompositeType, GraphQLField, FieldNode, ASTNode, NameNode } from "graphql";
export declare function isNode(maybeNode: any): maybeNode is ASTNode;
export declare type NamedNode = ASTNode & {
    name: NameNode;
};
export declare function isNamedNode(node: ASTNode): node is NamedNode;
export declare function highlightNodeForNode(node: ASTNode): ASTNode;
export declare function getFieldDef(schema: GraphQLSchema, parentType: GraphQLCompositeType, fieldAST: FieldNode): GraphQLField<any, any> | undefined;
export declare function removeDirectives<AST extends ASTNode>(ast: AST, directiveNames: string[]): AST;
export declare function removeDirectiveAnnotatedFields<AST extends ASTNode>(ast: AST, directiveNames: string[]): AST;
export declare function withTypenameFieldAddedWhereNeeded(ast: ASTNode): any;
//# sourceMappingURL=graphql.d.ts.map